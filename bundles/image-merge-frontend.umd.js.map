{"version":3,"file":"image-merge-frontend.umd.js","sources":["../../../projects/image-merge-frontend/src/lib/services/config.service.ts","../../../projects/image-merge-frontend/src/lib/image-merge-frontend.component.ts","../../../projects/image-merge-frontend/src/lib/component/image-layer/image-layer.component.ts","../../../projects/image-merge-frontend/src/lib/icons/icons.module.ts","../../../projects/image-merge-frontend/src/lib/directive/hide-image-on-lode.directive.ts","../../../projects/image-merge-frontend/src/lib/image-merge-frontend.module.ts","../../../projects/image-merge-frontend/src/public-api.ts","../../../projects/image-merge-frontend/src/image-merge-frontend.ts"],"sourcesContent":["import {Inject, Injectable, InjectionToken} from '@angular/core';\nimport {LayerCoordinates} from '../models/layer-object.interface';\n\nexport const IMAGE_MERGE_FRONTEND_CONFIG_TOKEN: InjectionToken<ConfigService> = new InjectionToken<ConfigService>('IMAGE_MERGE_FRONTEND_CONFIG_TOKEN');\n\nexport interface ImageMergeFrontendConfigInterface {\n    plainSize?: LayerCoordinates;\n    showMenu?: boolean;\n    showIcons?: boolean;\n\n}\n\n@Injectable()\nexport class ConfigService {\n    private heightWidthRatio: number;\n\n    constructor(@Inject(IMAGE_MERGE_FRONTEND_CONFIG_TOKEN) private config: ImageMergeFrontendConfigInterface = {}) {\n        this.setConfig(config);\n    }\n\n    public setConfig(config: ImageMergeFrontendConfigInterface): void {\n        this.config = config;\n        this.heightWidthRatio = this.getPlainSize().y / this.getPlainSize().x;\n    }\n\n    public getPlainSize(): LayerCoordinates {\n        return this.config.plainSize || {x: 600, y: 800};\n    }\n\n    public getHeightWidthRatio(): number {\n        return this.heightWidthRatio || this.getPlainSize().y / this.getPlainSize().x;\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter, HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    ViewChild\n} from '@angular/core';\nimport {LayerImage} from './models/layer-object.interface';\nimport {Subject, Subscription} from 'rxjs';\nimport {distinctUntilChanged, throttleTime} from 'rxjs/operators';\nimport {ConfigService} from './services/config.service';\n\n@Component({\n    selector: 'lib-image-merge-frontend',\n    templateUrl: './image-merge-frontend.component.html',\n    styleUrls: ['./image-merge-frontend.component.less']\n})\nexport class ImageMergeFrontendComponent implements OnInit, AfterViewInit, OnDestroy {\n\n    /** Ratio to multiply image axis with */\n    public ratio: number;\n\n    // Inputs Outputs\n    /** Input resize event from parent */\n    @Input()\n    private resizeThrottled$: Subject<any> = new Subject<any>();\n\n    /** Root Layer image to be randered */\n    @Input()\n    public layerImage: LayerImage;\n\n    /** Maximum height the plain takes */\n    @Input()\n    public maxHeight: number;\n\n    /** Moves images to left/center/right with flex properties */\n    @Input()\n    @HostBinding('style.justify-content')\n    private moveTo: 'flex-start' | 'flex-end' | 'center' = 'center';\n\n    /** Emits a change event if this.ratio changes */\n    @Output()\n    private ratioChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Emits height the current image takes at max */\n    @Output()\n    private currentMaxHeightChange: EventEmitter<number> = new EventEmitter<number>();\n\n    // Subscriptions\n    /** Local subscripts to be canceled of destroy */\n    private subscriptions: Subscription[] = [];\n\n    // Element Refs\n    /** Filler element */\n    @ViewChild('imageMergeFrontendFiller')\n    public fillerElement: ElementRef;\n\n    /** Height of filler element */\n    public fillerHeight: number;\n    /** Width of filler element */\n    public fillerWidth: number;\n\n    constructor(private config: ConfigService, private wrapperElement: ElementRef) {\n    }\n\n    public ngOnInit(): void {\n        // On Resize trigger this.calcSize\n        this.subscriptions.push(\n            this.resizeThrottled$\n                .pipe(\n                    throttleTime(80),\n                    distinctUntilChanged()\n                )\n                .subscribe(this.getCalSizeCallback().bind(this))\n        );\n    }\n\n    public ngAfterViewInit(): void {\n        this.getCalSizeCallback()();\n    }\n\n    private getCalSizeCallback(): () => void {\n        return () => setTimeout(this.calcSize.bind(this));\n    }\n\n    /** Calculates  */\n    public calcSize(width: number = 0): void {\n        // get ration if images (height / width)\n        const plainRatio = this.config.getHeightWidthRatio();\n        // define max height of images\n        const maxHeight = this.maxHeight || this.config.getPlainSize().y;\n\n        // get with of wrapper\n        width = width || this.wrapperElement.nativeElement.offsetWidth;\n        // calculate height by plain size\n        let height = width * plainRatio;\n\n        // if height exceeds max height shrink width if filler element\n        if (height > maxHeight) {\n            height = maxHeight;\n            width = height * (1 / plainRatio);\n        }\n\n        // set filler element size\n        this.fillerHeight = height;\n        this.fillerWidth = width;\n        // calculate new ratio for resizing images, so the fit plain\n        this.ratio = width / this.config.getPlainSize().x;\n\n        // emit change of ration\n        this.ratioChange.emit(this.ratio);\n        // emit change of filler height (so parent my adapt)\n        this.currentMaxHeightChange.emit(this.fillerHeight);\n    }\n\n    public ngOnDestroy(): void {\n        // unsubscribe all subscriptions\n        this.subscriptions.forEach((subscription: Subscription) => { subscription.unsubscribe(); });\n    }\n\n    public getMergeStyle(): object {\n        return {\n            height: this.fillerHeight + 'px',\n            width: this.fillerWidth  + 'px'\n        };\n    }\n}\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {ConfigService} from '../../services/config.service';\nimport {LayerCoordinates, LayerImage} from '../../models/layer-object.interface';\n\n\n@Component({\n    selector: 'lib-image-layer',\n    templateUrl: './image-layer.component.html',\n    styleUrls: ['./image-layer.component.less']\n})\n/** Display ImageLayer and render other ImageLayerComponents */\nexport class ImageLayerComponent implements OnChanges {\n    /** current Layer image */\n    @Input()\n    public layerImage: LayerImage;\n    /** Offset by which the parent moves its children */\n    @Input()\n    public parentLayerOffset: LayerCoordinates = {x: 0, y: 0};\n    /** Ratio by which the image is resized to fit available space */\n    @Input()\n    public ratio: number;\n\n    constructor(public config: ConfigService) {\n    }\n\n    /** prevent so valueKey pipe to sort any keys */\n    public doNotSort(): number {\n        return 0;\n    }\n\n    /** listen to changes of layer image => it may has an unset currentVariant */\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.layerImage && changes.layerImage.currentValue !== changes.layerImage.previousValue) {\n            const a: LayerImage = changes.layerImage.currentValue;\n            if (a.variants && typeof a.currentVariant === 'undefined') {\n                a.currentVariant = 0;\n            }\n        }\n    }\n\n    /** check if val is a number */\n    public isNumeric(val: number): boolean {\n        return typeof val === 'number';\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {far} from '@fortawesome/free-regular-svg-icons';\nimport {FaIconLibrary, FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport {fas} from '@fortawesome/free-solid-svg-icons';\n\n\n@NgModule({\n  declarations: [],\n  imports: [ FontAwesomeModule ],\n  exports: [ FontAwesomeModule ]\n})\nexport class IconsModule {\n  constructor(library: FaIconLibrary) {\n    // todo: Refactor to used icons\n    library.addIconPacks(fas, far);\n  }\n}\n","import {Directive, ElementRef, Input, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges} from '@angular/core';\n\n@Directive({\n  selector: '[libHideImageOnLoad]'\n})\nexport class HideImageOnLodeDirective implements OnInit, OnDestroy, OnChanges{\n\n  @Input()\n  public src: string;\n\n  constructor(private elRef: ElementRef, private renderer: Renderer2) {}\n\n  public ngOnInit(): void {\n    this.elRef.nativeElement.addEventListener('load', this.showElement.bind(this));\n  }\n\n  public ngOnDestroy(): void {\n    this.elRef.nativeElement.removeEventListener('load', this.showElement);\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.src && changes.src.currentValue !== changes.src.previousValue) {\n      this.renderer.setAttribute(this.elRef.nativeElement, 'src', changes.src.currentValue);\n      this.elRef.nativeElement.style.display = 'none';\n    }\n  }\n\n  private showElement(): void {\n    this.elRef.nativeElement.style.display = 'block';\n  }\n\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {ImageMergeFrontendComponent} from './image-merge-frontend.component';\nimport {CommonModule} from '@angular/common';\nimport {ImageLayerComponent} from './component/image-layer/image-layer.component';\nimport {\n    ConfigService,\n    IMAGE_MERGE_FRONTEND_CONFIG_TOKEN,\n    ImageMergeFrontendConfigInterface\n} from './services/config.service';\nimport {IconsModule} from './icons/icons.module';\nimport { HideImageOnLodeDirective } from './directive/hide-image-on-lode.directive';\n\n\n@NgModule({\n    declarations: [ImageMergeFrontendComponent, ImageLayerComponent, HideImageOnLodeDirective],\n    imports: [\n        CommonModule,\n        IconsModule\n    ],\n    providers: [\n        ConfigService,\n        {provide: IMAGE_MERGE_FRONTEND_CONFIG_TOKEN, useValue: {}}\n    ],\n    exports: [ImageMergeFrontendComponent]\n})\nexport class ImageMergeFrontendModule {\n\n    static forRoot(config: ImageMergeFrontendConfigInterface): ModuleWithProviders<ImageMergeFrontendModule> {\n        return {\n            ngModule: ImageMergeFrontendModule,\n            providers: [\n                {provide: IMAGE_MERGE_FRONTEND_CONFIG_TOKEN, useValue: config}\n            ]\n        };\n    }\n}\n","/*\n * Public API Surface of image-merge-frontend\n */\n\nexport * from './lib/models/layer-object.interface';\nexport * from './lib/services/config.service';\nexport * from './lib/image-merge-frontend.component';\nexport * from './lib/image-merge-frontend.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {ImageLayerComponent as ɵa} from './lib/component/image-layer/image-layer.component';\nexport {HideImageOnLodeDirective as ɵb} from './lib/directive/hide-image-on-lode.directive';\nexport {IconsModule as ɵc} from './lib/icons/icons.module';"],"names":["InjectionToken","Injectable","Inject","Subject","EventEmitter","throttleTime","distinctUntilChanged","Component","ElementRef","Input","HostBinding","Output","ViewChild","fas","far","NgModule","FontAwesomeModule","FaIconLibrary","Directive","Renderer2","CommonModule"],"mappings":"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"}